// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v3.20.3
// source: test.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "some.pkg.test_service";

export interface GetSomethingRequest {
}

export interface GetSomethingResponse {
  whatever: string;
}

export const SOME_PKG_TEST_SERVICE_PACKAGE_NAME = "some.pkg.test_service";

export interface TestServiceClient {
  getSomething(request: GetSomethingRequest, ...rest: any): Observable<GetSomethingResponse>;
}

export interface TestServiceController {
  getSomething(
    request: GetSomethingRequest,
    ...rest: any
  ): Promise<GetSomethingResponse> | Observable<GetSomethingResponse> | GetSomethingResponse;
}

export function TestServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getSomething"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("TestService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("TestService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const TEST_SERVICE_NAME = "TestService";
